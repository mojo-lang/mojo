package {{.Java.PackageName}}.service;

import io.grpc.stub.StreamObserver;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import javax.annotation.Resource;
import org.mojolang.mojo.core.Null;

import {{.Java.ServicePackageName}}.{{.Interface.Name}}Grpc.{{.Interface.Name}}ImplBase;
import {{.Java.PackageName}}.*;
import {{.Java.ServicePackageName}}.*;

@Service
public class ResidenceImpl extends ResidenceImplBase {
    private static final Logger LOGGER = LoggerFactory.getLogger(ResidenceImpl.class);

    //@Resource
    //private BaseRepository baseRepository;

    {{range $m := $.Interface.Methods}}
    @Override
    public void {{ToLowerCamel $m.Name}}({{$m.Request.Name}} request,
                           StreamObserver<{{$m.Response.Java.GRpcName}}> responseObserver) {
        LOGGER.info("Server received request {}", request);

        {{if not $m.Response.IsNull}}
        {{$m.Response.Java.GRpcName}}.Builder builder = {{$m.Response.Java.GRpcName}}.newBuilder();
        {{end}}
        responseObserver.onNext({{if $m.Response.IsNull}}null{{else}}builder.build(){{end}});
        responseObserver.onCompleted();
    }
    {{end}}
}
