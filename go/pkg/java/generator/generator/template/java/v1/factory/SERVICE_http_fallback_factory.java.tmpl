// Code generated by mojo. DO NOT EDIT.
// Rerunning mojo will overwrite this file.{{if IsMojoPackage .PackageFullName}}
//
// Copyright 2021 Mojo-lang.org
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.{{end}}

package {{.Java.ServicePackageName}}.factory;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.cloud.openfeign.FallbackFactory;
import org.springframework.stereotype.Component;
import java.util.List;
import java.util.Map;
import org.mojolang.mojo.core.Null;
import org.mojolang.mojo.core.Result;
import org.mojolang.mojo.core.Exception;
import org.mojolang.mojo.core.ErrorCodes;
import org.mojolang.mojo.core.Pagination;
import {{.Java.PackageName}}.*;
import {{.Java.ServicePackageName}}.{{ToCamel .Interface.Name}}Http;

@Component
public class {{ToCamel .Interface.Name}}HttpFallbackFactory implements FallbackFactory<{{ToCamel .Interface.Name}}Http> {
    private static final Logger log = LoggerFactory.getLogger({{ToCamel .Interface.Name}}HttpFallbackFactory.class);

    @Override
    public {{ToCamel .Interface.Name}}Http create(Throwable throwable) {
        return new {{ToCamel .Interface.Name}}Http() {
            {{range $m := $.Interface.Methods}}
            @Override
            public {{$m.Response.Java.Name}} {{ToLowerCamel $m.Name}}({{range $i, $f := $m.Request.Fields}}{{if gt $i 0}}, {{end}}{{$f.Type.Java.Name}} {{ToLowerCamel $f.Name}}{{end}}) {
                 throw new Exception(ErrorCodes.INTERNAL_ERROR, "failed to {{$m.Name}}.");
            }
            {{end}}
        };
    }
}
