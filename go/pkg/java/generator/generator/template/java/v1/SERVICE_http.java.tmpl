// Code generated by mojo. DO NOT EDIT.
// Rerunning mojo will overwrite this file.{{if IsMojoPackage .PackageFullName}}
//
// Copyright 2021 Mojo-lang.org
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.{{end}}

package {{.Java.ServicePackageName}};

import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingClass;
import org.springframework.cloud.openfeign.FeignClient;
import org.springframework.stereotype.Component;
import org.springframework.web.bind.annotation.*;
import java.util.List;
import java.util.Map;
import org.mojolang.mojo.core.Null;
import org.mojolang.mojo.core.Result;
import org.mojolang.mojo.core.Pagination;
import {{.Java.PackageName}}.*;
import {{.Java.ServicePackageName}}.constant.ServiceNameConstants;
import {{.Java.ServicePackageName}}.factory.{{ToCamel .Interface.Name}}HttpFallbackFactory;


@Component
@FeignClient(contextId = "{{ToLowerCamel .Interface.Name}}RemoteAPI", value = ServiceNameConstants.SERVICE_{{ToUpper .Interface.Name}}, fallbackFactory = {{ToCamel .Interface.Name}}HttpFallbackFactory.class)
@ConditionalOnMissingClass("{{.Java.PackageName}}.service.{{ToCamel .Interface.Name}}HttpImpl")
public interface {{.Interface.BaredName}}Http {
    {{range $m := $.Interface.Methods}}
    {{if $m.GetFirstBinding.Response.Body}}@ResponseBody{{end}}
    @{{$m.GetFirstBinding.Java.RequestMappingName}}("{{$m.GetFirstBinding.Path}}")
    {{$m.Response.Java.Name}} {{ToLowerCamel $m.Name}}({{range $i, $f := $m.Request.Fields}}{{if gt $i 0}}, {{end}}{{if $f.JavaRequestBody}}@RequestBody {{else if $f.HasJavaParamBinding}}{{$f.JavaParamBinding}} {{end}}{{$f.Type.Java.Name}} {{ToLowerCamel $f.Name}}{{end}});
    {{end}}
}