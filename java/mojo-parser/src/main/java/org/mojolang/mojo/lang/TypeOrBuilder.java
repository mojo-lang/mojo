// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mojo/lang/type.proto

package org.mojolang.mojo.lang;

public interface TypeOrBuilder extends
    // @@protoc_insertion_point(interface_extends:mojo.lang.Type)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>.mojo.lang.EnumType enum_type = 2;</code>
   */
  boolean hasEnumType();
  /**
   * <code>.mojo.lang.EnumType enum_type = 2;</code>
   */
  org.mojolang.mojo.lang.EnumType getEnumType();
  /**
   * <code>.mojo.lang.EnumType enum_type = 2;</code>
   */
  org.mojolang.mojo.lang.EnumTypeOrBuilder getEnumTypeOrBuilder();

  /**
   * <code>.mojo.lang.StructType struct_type = 3;</code>
   */
  boolean hasStructType();
  /**
   * <code>.mojo.lang.StructType struct_type = 3;</code>
   */
  org.mojolang.mojo.lang.StructType getStructType();
  /**
   * <code>.mojo.lang.StructType struct_type = 3;</code>
   */
  org.mojolang.mojo.lang.StructTypeOrBuilder getStructTypeOrBuilder();

  /**
   * <code>.mojo.lang.InterfaceType interface_type = 4;</code>
   */
  boolean hasInterfaceType();
  /**
   * <code>.mojo.lang.InterfaceType interface_type = 4;</code>
   */
  org.mojolang.mojo.lang.InterfaceType getInterfaceType();
  /**
   * <code>.mojo.lang.InterfaceType interface_type = 4;</code>
   */
  org.mojolang.mojo.lang.InterfaceTypeOrBuilder getInterfaceTypeOrBuilder();

  /**
   * <code>.mojo.lang.FuncType func_type = 5;</code>
   */
  boolean hasFuncType();
  /**
   * <code>.mojo.lang.FuncType func_type = 5;</code>
   */
  org.mojolang.mojo.lang.FuncType getFuncType();
  /**
   * <code>.mojo.lang.FuncType func_type = 5;</code>
   */
  org.mojolang.mojo.lang.FuncTypeOrBuilder getFuncTypeOrBuilder();

  /**
   * <code>.mojo.lang.NominalType nominal_type = 6;</code>
   */
  boolean hasNominalType();
  /**
   * <code>.mojo.lang.NominalType nominal_type = 6;</code>
   */
  org.mojolang.mojo.lang.NominalType getNominalType();
  /**
   * <code>.mojo.lang.NominalType nominal_type = 6;</code>
   */
  org.mojolang.mojo.lang.NominalTypeOrBuilder getNominalTypeOrBuilder();

  public org.mojolang.mojo.lang.Type.TypeCase getTypeCase();
}
